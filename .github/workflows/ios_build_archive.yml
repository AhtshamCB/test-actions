name: 'Build iOS archive'

env:
  WORKPLACE: ${{ 'ios/teefiapp.xcworkspace' }}
  SCHEME: ${{ 'TeeFiAppProd' }}
  CONFIGURATION: ${{ 'ReleaseProd' }}
  ARCHIVE_PATH: ${{ 'build/TeeFiAppProd.xcarchive' }}
  ARTIFACT_NAME: ${{ 'TeeFiAppProd.xcarchive' }}

  SEC_IOS_CERTIFICATE_P12: ${{ secrets.IOS_CERTIFICATE_P12 }}
  SEC_IOS_CERTIFICATE_PWD: ${{ secrets.IOS_CERTIFICATE_PWD }}
  SEC_IOS_PROVISIONING_PROFILE: ${{secrets.IOS_PROVISIONING_PROFILE }}
  SEC_IOS_KEYCHAIN_PWD: ${{ secrets.IOS_KEYCHAIN_PWD }}

on:
  workflow_dispatch:

jobs:
  build_ios_archive:
    runs-on: macos-latest
    steps:
      - name: check Xcode version
        run: /usr/bin/xcodebuild -version


      - name: Install the Apple certificate and provisioning profile
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$SEC_IOS_CERTIFICATE_P12" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$SEC_IOS_PROVISIONING_PROFILE" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$SEC_IOS_KEYCHAIN_PWD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$SEC_IOS_KEYCHAIN_PWD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$SEC_IOS_CERTIFICATE_PWD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: checkout repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Run Yarn Install
        run: |
          npm i -g corepack
          yarn install

      - name: Pod Install
        run: |
          cd ios
          pod install

      - name: build archive
        run: |
          xcodebuild -workspace $WORKPLACE -scheme $SCHEME -configuration $CONFIGURATION \
          archive -archivePath $ARCHIVE_PATH -allowProvisioningUpdates
          PROVISIONING_STYLE="Manual" \
          PROVISIONING_PROFILE={$SEC_IOS_PROVISIONING_PROFILE} \
          CODE_SIGN_STYLE="Manual" \
          CODE_SIGN_IDENTITY={$SEC_IOS_CERTIFICATE_P12} \

      - name: Upload application
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: |
            ${{ env.ARCHIVE_PATH }}
          retention-days: 3
