name: 'Build Android aab'

on:
  workflow_dispatch:
    branches: [develop]
    inputs:
      message:
        description: 'Message to the QA to help him test the feature.'
        required: false
        default: 'No message left by the developer to help you test :('
      preprod:
        description: 'Do you want to generate a preprod build? (y/n)'
        required: false
        default: 'n'
      prod:
        description: 'Do you want to generate a prod build? (y/n)'
        required: false
        default: 'n'
# if:$ {{ github.event.inputs.preprod == 'y' }}

jobs:
  build_android_aab:
    name: Build Signed Android AAB
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Insall Java
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'

      # Validate gradle
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      # Setup Node
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # yarn install
      - name: Run Yarn Install
        run: |
          npm i -g corepack
          yarn install

      # in the folder specified in the release signing configuration
      # - name: Decode Keystore
      #   id: decode_keystore
      #   uses: timheuer/base64-to-file@v1.2
      #   with:
      #     fileName: 'android_keystore.jks'
      #     fileDir: '/home/runner/work/up-teefi/android/app/keystore/'
      #     encodedString: ${{ secrets.ANDROID_KEYSTORE_PROD }}

      # Build and sign APK ("-x test" argument is used to skip tests)
      - name: Build AAB
        run: |
          cd android && ./gradlew :app:bundleRelease -x test
        env:
          ANDROID_PROD_KEY_ALIAS: ${{ secrets.ANDROID_PROD_KEY_ALIAS }}
          ANDROID_PROD_ALIAS_PWD: ${{ secrets.ANDROID_PROD_ALIAS_PWD }}
          ANDROID_KEYSTORE_PROD_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PROD_PASSWORD }}

      # Upload Output folder
      - name: Upload Output
        uses: actions/upload-artifact@v2
        with:
          name: output
          path: ./android/app/build/outputs/bundle/prodRelease/app-prod-release.aab
          retention-days: 3

      # create service_account.json
      - name: Create service_account.json
        id: createServiceAccount
        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

      #deploy to goole
      - name: Deploy to Play Store (BETA)
        id: deploy
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: com.teefiapp.production
          releaseFile: ./android/app/build/outputs/bundle/prodRelease/app-prod-release.aab
          track: beta
          whatsNewDirectory: whatsnew/
