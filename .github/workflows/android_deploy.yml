name: 'Deploy aab to goole store'

on:
  workflow_dispatch:
    # inputs:
    #   message:
    #     description: 'Message to the QA to help him test the feature.'
    #     required: false
    #     default: 'No message left by the developer to help you test :('
    #   preprod:
    #     description: 'Do you want to generate a preprod build? (y/n)'
    #     required: false
    #     default: 'n'
    #   prod:
    #     description: 'Do you want to generate a prod build? (y/n)'
    #     required: false
    #     default: 'n'
# if:$ {{ github.event.inputs.preprod == 'y' }}


env:
  SEC_KEYSTORE_PWD: ${{secrets.ANDROID_KEYSTORE_PROD_PASSWORD }}
  SEC_ALIAS: ${{secrets.ANDROID_PROD_KEY_ALIAS }}
  SEC_ALIAS_PWD: ${{secrets.ANDROID_PROD_ALIAS_PWD }}

  SERVICE_ACCOUNT_JSON_PATH: ${{'./android/app/keystore/service_account.json'}}
  ARTIFACT_PATH:  ${{ './android/app/build/outputs/bundle/prodRelease/app-prod-release.aab' }}

jobs:
  build_android_aab:
    name: Deploy build aab
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Insall Java
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'

      # Validate gradle
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      # Setup Node
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # yarn install
      - name: Run Yarn Install
        run: |
          npm i -g corepack
          yarn install

      # Build and sign APK ("-x test" argument is used to skip tests)
      - name: Build AAB
        run: |
          cd android && ./gradlew :app:bundleRelease -x test
        env:
          ANDROID_PROD_KEY_ALIAS: ${{ env.SEC_ALIAS }}
          ANDROID_PROD_ALIAS_PWD: ${{ env.SEC_ALIAS_PWD }}
          ANDROID_KEYSTORE_PROD_PASSWORD: ${{ env.SEC_KEYSTORE_PWD }}

      # Upload Output folder
      - name: Upload Output
        uses: actions/upload-artifact@v2
        with:
          name: download
          path:  ${{ env.ARTIFACT_PATH }} 
          retention-days: 3

      #deploy to goole
      - name: Deploy to Play Store
        id: deploy
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: ${{ env.SERVICE_ACCOUNT_JSON_PATH }} 
          packageName: com.teefiapp.production
          releaseFiles: ${{ env.ARTIFACT_PATH }}
          track: internal
