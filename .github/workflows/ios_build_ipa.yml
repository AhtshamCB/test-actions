name: 'Build iOS ipa'

env:
  WORKPLACE: ${{ 'ios/teefiapp.xcworkspace' }}
  SCHEME: ${{ 'TeeFiAppDev' }}
  CONFIGURATION: ${{ 'ReleaseDev' }}
  ARCHIVE_PATH: ${{ 'ios/build/TeeFiAppDev.xcarchive' }}
  PLIST_PATH: ${{'ios/teefiapp/Info-Dev.plist' }}
  IPA_PATH: ${{ 'prod/' }}

  ARTIFACT_NAME: ${{ 'teefiapp.ipa' }}

  DISTRIBUTION_CERTIFICATE: ${{ secrets.APPLE_APP_DISTRIBUTION_CERTIFICATE }}
  CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
  DISTRIBUTION_PROFILE: ${{secrets.APPLE_DISTRIBUTION_PROFILE }}
  KEY_PWD: ${{ secrets.KEY_PWD }}

on:
  # manual trigger but change to any supported event
  # see addl: https://www.andrewhoog.com/post/how-to-build-react-native-android-app-with-github-actions/#3-run-build-workflow
  workflow_dispatch:
    branches: [develop]

jobs:
  build_ios_ipa:
    runs-on: macos-latest
    steps:
      # this was more debug as was curious what came pre-installed
      # GitHub shares this online, e.g. https://github.com/actions/runner-images/blob/macOS-12/20230224.1/images/macos/macos-12-Readme.md
      - name: check Xcode version
        run: /usr/bin/xcodebuild -version
      
      - name: Install the Apple certificate and provisioning profile
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$DISTRIBUTION_CERTIFICATE" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$DISTRIBUTION_PROFILE" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEY_PWD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEY_PWD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$CERTIFICATE_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles


      - name: checkout repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Run Yarn Install
        run: |
          npm i -g corepack
          yarn install

      - name: Pod Install
        run: |
          cd ios && pod install

      - name: build archive
        run: |
          xcodebuild -workspace $WORKPLACE -scheme $SCHEME -configuration $CONFIGURATION \
          archive -archivePath $ARCHIVE_PATH -allowProvisioningUpdates
          PROVISIONING_STYLE="Manual" \
          PROVISIONING_PROFILE={$DISTRIBUTION_PROFILE} \
          CODE_SIGN_STYLE="Manual" \
          CODE_SIGN_IDENTITY={$DISTRIBUTION_CERTIFICATE} \

      # xcodebuild -exportArchive -archivePath ./TeeFiAppDev.xcarchive -exportOptionsPlist .  -exportPath teefi.ipa
      - name: export ipa
        run: |
          xcodebuild -exportArchive \
          -archivePath $ARCHIVE_PATH \
          -exportOptionsPlist $PLIST_PATH \
          -exportPath $IPA_PATH
      - name: Upload application
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: |
            ${{ env.IPA_PATH }}
          retention-days: 3
